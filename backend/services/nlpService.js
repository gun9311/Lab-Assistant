require('dotenv').config();
const { OpenAI } = require('openai');

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

const getNLPResponse = async function* (messages) {
  try {
    messages.unshift({ role: 'system', content: 'Í∞ÑÍ≤∞ÌïòÍ≥† ÏßßÏùÄ ÏùëÎãµÏùÑ Ï†úÍ≥µÌï¥ Ï£ºÏÑ∏Ïöî.' });

    const response = await openai.chat.completions.create({
      model: 'gpt-3.5-turbo',
      messages: messages,
      stream: true,
      max_tokens: 300,
      temperature: 0.7,
    });

    let accumulatedText = "";  // ÎàÑÏ†ÅÎêú ÌÖçÏä§Ìä∏Î•º Ï†ÄÏû•Ìï† Î≥ÄÏàò
    let buffer = [];  // Ï≤≠ÌÅ¨Î•º Ï†ÄÏû•Ìï† Î∞∞Ïó¥

    // Î¨∏Ïû• ÎÅùÏùÑ ÌôïÏù∏ÌïòÎäî Ï†ïÍ∑ú ÌëúÌòÑÏãùÏóê Ïù¥Î™®ÏßÄ Î∞è ÌäπÏàò Î¨∏ÏûêÎ•º Ìè¨Ìï®
    const sentenceEndRegex = /([.?!]|[üòäüëçüòâ‚ù§Ô∏èüéâ‚ú®‚Ä¶‚Äî*üìö‚úèÔ∏èüìùüìñüßë‚Äçüè´üßë‚ÄçüéìüéìüìÖ‚è∞üìäüí°üìêüîçüíªüéíüëèüí™üåüüèÜü§ìüòäüôåüôèü§îüòÉüòÖüò¥üòÆü§Ø])\s*$/g;

    for await (const chunk of response) {
      const delta = chunk.choices[0].delta;

      if (delta && delta.content) {
        accumulatedText += delta.content;
        buffer.push(delta.content);  // Ï≤≠ÌÅ¨Î•º Î≤ÑÌçºÏóê Ï∂îÍ∞Ä

        // Î¨∏Ïû•Ïùò ÎÅùÏùÑ Íµ¨ÎëêÏ†êÍ≥º Ïù¥Î™®ÏßÄ Î∞è ÌäπÏàò Î¨∏ÏûêÎ°ú ÌôïÏù∏
        if (accumulatedText.match(sentenceEndRegex)) {
          // ÌÉÄÏù¥Ìïë Ìö®Í≥ºÎ•º ÏúÑÌï¥ Í∞Å Ï≤≠ÌÅ¨Î•º ÏùºÏ†ï Í∞ÑÍ≤©ÏúºÎ°ú Ï†ÑÏÜ°
          for (const bufferedChunk of buffer) {
            yield bufferedChunk;
            await new Promise(resolve => setTimeout(resolve, 100));  // 100ms Í∞ÑÍ≤©ÏúºÎ°ú Ï≤≠ÌÅ¨ Ï†ÑÏÜ°
          }
          buffer = [];  // Î≤ÑÌçº Ï¥àÍ∏∞Ìôî
          accumulatedText = "";  // ÎàÑÏ†ÅÎêú ÌÖçÏä§Ìä∏ Ï¥àÍ∏∞Ìôî
        }
      }

      // Ïä§Ìä∏Î¶¨Î∞ç Ï¢ÖÎ£å ÏãúÏ†ê Ï≤òÎ¶¨
      if (chunk.choices[0].finish_reason === 'stop') {
        // Ïä§Ìä∏Î¶¨Î∞çÏù¥ Ï¢ÖÎ£åÎêú ÌõÑ, ÎÇ®ÏïÑ ÏûàÎäî Î∂àÏôÑÏ†ÑÌïú Ï≤≠ÌÅ¨Îì§ÏùÑ ÏùºÏ†ï Í∞ÑÍ≤©ÏúºÎ°ú Ï†ÑÏÜ°
        for (const bufferedChunk of buffer) {
          yield bufferedChunk;
          await new Promise(resolve => setTimeout(resolve, 50));  // 100ms Í∞ÑÍ≤©ÏúºÎ°ú Ï≤≠ÌÅ¨ Ï†ÑÏÜ°
        }
        break; // Ïä§Ìä∏Î¶¨Î∞ç Ï¢ÖÎ£å
      }
    }
  } catch (error) {
    console.error('Error in getNLPResponse:', error);
    throw new Error('Failed to get response from OpenAI API');
  }
};

module.exports = { getNLPResponse };
