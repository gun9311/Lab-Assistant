name: Deploy quizWorker

on:
  push:
    branches:
      - main
    paths:
      - 'quizWorker/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.WORKER_SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.WORKER_IP }} >> ~/.ssh/known_hosts

      # Node.js 이미지 빌드 및 푸시
      - name: Build and Push Node.js Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          cd quizWorker
          docker build --build-arg MONGODB_URL=${{ secrets.MONGODB_URL }} \
                       --build-arg SQS_REGION=${{ secrets.SQS_REGION }} \
                       --build-arg QUIZ_QUEUE_URL=${{ secrets.QUIZ_QUEUE_URL }} \
                       --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
                       --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
                       --build-arg QUIZ_NOTIFICATION_API_URL=${{ secrets.QUIZ_NOTIFICATION_API_URL }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/quizworker-node:latest .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/quizworker-node:latest

      # Flask 서버 이미지 빌드 및 푸시
      - name: Build and Push Flask Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          cd quizWorker
          docker build -f Dockerfile-flask -t ${{ secrets.DOCKER_USERNAME }}/quizworker-flask:latest .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/quizworker-flask:latest

      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.WORKER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/quizworker-node:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/quizworker-flask:latest
            docker-compose down || true
            docker-compose up -d
            docker image prune -a -f
          EOF
