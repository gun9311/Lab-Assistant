name: Deploy quizWorker

on:
  push:
    branches:
      - main
    paths:
      - 'quizWorker/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set up Node.js
        # uses: actions/setup-node@v2
        # with:
          # node-version: '20'

      # - name: Install Node.js dependencies
      #   run: |
      #     cd quizWorker
      #     yarn install

      # - name: Set up Python
      #   uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'

      # - name: Install Python dependencies
      #   run: |
      #     cd quizWorker
      #     python3 -m venv venv
      #     source venv/bin/activate
      #     pip install -r requirements.txt

      #- name: Run tests
      #  run: yarn test
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.WORKER_SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.WORKER_IP }} >> ~/.ssh/known_hosts

      # - name: Test SSH connection
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.WORKER_IP }} echo "SSH connection test successful"

      - name: Build Docker image
        run: |
          cd quizWorker
          docker build --build-arg MONGODB_URL=${{ secrets.MONGODB_URL }} \
                       --build-arg SQS_REGION=${{ secrets.SQS_REGION }} \
                       --build-arg QUIZ_QUEUE_URL=${{ secrets.QUIZ_QUEUE_URL }} \
                       --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
                       --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
                       --build-arg QUIZ_NOTIFICATION_API_URL=${{ secrets.QUIZ_NOTIFICATION_API_URL }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/quizworker:latest .
      
      - name: Push Docker image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/quizworker:latest

      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.WORKER_IP }} << 'EOF'
            docker pull ${{ secrets.DOCKER_USERNAME }}/quizworker:latest
            docker stop quizworker-container || true
            docker rm quizworker-container || true
            docker run -d --name quizworker-container -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/quizworker:latest
            docker image prune -a -f
          EOF
          
      # - name: Deploy to EC2
      #   uses: appleboy/ssh-action@v0.1.4
      #   with:
      #     host: ${{ secrets.WORKER_IP }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.WORKER_SSH_PRIVATE_KEY }}
      #     script: |
      #       docker pull ${{ secrets.DOCKER_USERNAME }}/quizworker:latest
      #       docker stop quizworker-container || true
      #       docker rm quizworker-container || true
      #       docker run -d --name quizworker-container -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/quizworker:latest
